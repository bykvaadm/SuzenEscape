---
- name: create users
  user:
    name: "{{ item.name }}"
    password: "{{ item.password | password_hash('sha512', 'sault') }}"
    shell: /usr/local/bin/dockersh
    groups: docker
    create_home: yes
  with_items: "{{ levels }}"

- name: add custom shell in list
  lineinfile:
    path: /etc/shells
    line: /usr/local/bin/dockersh

- name: upload custom shell
  template:
    src: dockersh.j2
    dest: /usr/local/bin/dockersh
    owner: root
    group: root
    mode: 0755

- name: Create kill docker cron job
  cron:
    name: docker cleanup
    user: root
    job: "/usr/local/bin/kill-docker.sh"
    cron_file: docker

- name: Create external checker cron job
  cron:
    name: external checker
    user: root
    job: "/usr/local/bin/checker.sh"
    cron_file: checker

- name: upload external checker wrapper
  copy:
    src: checker.sh
    dest: /usr/local/bin/checker.sh
    owner: root
    group: root
    mode: 0755

- name: create directory for scripts
  file:
    path: /opt/susenescape
    state: directory
    mode: 0755

- name: upload checker scripts
  when: item.externalcheck is defined
  copy:
    content: "{{ item.externalcheck }}"
    dest: "/opt/susenescape/{{ item.name }}"
    mode: 0755
  with_items: "{{ externalchecks }}"

- name: upload cleanup docker script
  template:
    src: kill-docker.sh
    dest: /usr/local/bin/kill-docker.sh
    owner: root
    group: root
    mode: 0755

- name: upload ssh_config
  notify: restart ssh service
  copy:
    src: ssh_config
    dest: /etc/ssh/ssh_config
    owner: root
    group: root
    mode: 0644

- name: upload sshd_config
  notify: restart ssh service
  copy:
    src: sshd_config
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: 0644

- name: Pull docker image
  command: docker pull {{ registry_host }}/suzenescape/{{ item.name }}
  register: docker_pull
  changed_when: "'Status: Downloaded newer image' in docker_pull.stdout"
  with_items: "{{ levels }}"
  when: tasks_to_build == "all"
  tags:
  - pull
  - new_task

- name: Pull docker image
  command: docker pull {{ registry_host }}/suzenescape/suzen{{ item }}
  register: docker_pull
  changed_when: "'Status: Downloaded newer image' in docker_pull.stdout"
  with_items: "{{ tasks_to_build.split() }}"
  when: tasks_to_build != "all"

- name: Pull docker server image
  command: docker pull {{ registry_host }}/suzenescape/{{ item.1.name }}
  register: docker_pull_servers
  changed_when: "'Status: Downloaded newer image' in docker_pull_servers.stdout"
  loop: "{{ levels | subelements('servers', skip_missing=True) }}"
  when: tasks_to_build == "all"
  tags:
  - pull
  - new_task

- name: Pull docker server image
  command: docker pull {{ registry_host }}/suzenescape/suzen{{ item }}server
  register: docker_pull_servers
  changed_when: "'Status: Downloaded newer image' in docker_pull_servers.stdout"
  loop: "{{ tasks_to_build.split() }}"
  when:
  - tasks_to_build != "all"
  - levels | selectattr('name', 'equalto', "suzen" + item ) | selectattr('servers', 'defined')|list|length>0
