- name: install pkgs
  apt:
    update_cache: "{{ is_online | default('yes') }}"
    name: bc
  tags:
    - test

- name      : create users
  user      :
    name       : "{{ item.name }}"
    password   : "{{ item.password | password_hash('sha512', item.sault) }}"
    shell      : /usr/local/bin/dockersh
    groups     : docker
    create_home: yes
  with_items: "{{ levels }}"

- name      : add custom shell in list
  lineinfile:
    path: /etc/shells
    line: /usr/local/bin/dockersh

- name    : upload custom shell
  template:
    src  : dockersh.j2
    dest : /usr/local/bin/dockersh
    owner: root
    group: root
    mode : 0755

- name: Create kill docker cron job
  cron:
    name     : docker cleanup
    user     : root
    job      : "/usr/local/bin/kill-docker.sh"
    cron_file: docker

- name: Create external checker cron job
  cron:
    name     : external checker
    user     : root
    job      : "/usr/local/bin/checker.sh"
    cron_file: checker

- name: upload external checker wrapper
  copy:
    src  : checker.sh
    dest : /usr/local/bin/checker.sh
    owner: root
    group: root
    mode : 0755

- name: create directory for scripts
  file:
    path : /opt/susenescape
    state: directory
    mode : 0755

- name      : upload checker scripts
  template  :
    src : "suzen{{ item }}.j2"
    dest: "/opt/susenescape/suzen{{ item }}"
    mode: 0755
  with_items:
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 27
    - 28
    - 2303

- name: upload cleanup docker script
  copy:
    src  : kill-docker.sh
    dest : /usr/local/bin/kill-docker.sh
    owner: root
    group: root
    mode : 0755

- name    : check if rules file exists
  stat    :
    path: /var/tmp/addr
  register: kostyl_stat

- name      : create kostyl file
  lineinfile:
    path  : /var/tmp/addr
    line  : '1'
    create: yes
    mode  : 0777
    state : present
  when      : kostyl_stat.stat.exists == false

- name: upload docker config
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0755
  register: docker_daemon_config

- name: restart docker service
  service:
    daemon_reload: yes
    name: docker
    enabled: yes
    state: restarted
  when: docker_daemon_config.changed

- name: upload ssh_config
  copy:
    src  : ssh_config
    dest : /etc/ssh/ssh_config
    owner: root
    group: root
    mode : 0644

- name: upload sshd_config
  copy:
    src  : sshd_config
    dest : /etc/ssh/sshd_config
    owner: root
    group: root
    mode : 0644
  register: sshd_config

- name: restart sshd
  systemd:
    name: sshd
    state: restarted
  when: sshd_config.changed

- name        : Pull docker image
  command     : docker pull {{ registry_url }}/suzenescape/{{ item.name }}
  register    : docker_pull
  changed_when: "'Status: Downloaded newer image' in docker_pull.stdout"
  with_items  : "{{ levels }}"
  when        : tasks_to_build == "all"
  tags        :
    - pull
    - new_task

- name        : Pull docker image
  command     : docker pull {{ registry_url }}/suzenescape/suzen{{ item }}
  register    : docker_pull
  changed_when: "'Status: Downloaded newer image' in docker_pull.stdout"
  with_items  : "{{ tasks_to_build.split() }}"
  when        : tasks_to_build != "all"

- name        : Pull docker server image
  command     : docker pull {{ registry_url }}/suzenescape/{{ item.1.name }}
  register    : docker_pull_servers
  changed_when: "'Status: Downloaded newer image' in docker_pull_servers.stdout"
  loop        : "{{ levels | subelements('servers', skip_missing=True) }}"
  when        : tasks_to_build == "all"
  tags        :
    - pull
    - new_task

- name        : Pull docker server image
  command     : docker pull {{ registry_url }}/suzenescape/suzen{{ item }}server
  register    : docker_pull_servers
  changed_when: "'Status: Downloaded newer image' in docker_pull_servers.stdout"
  loop        : "{{ tasks_to_build.split() }}"
  when        :
  - tasks_to_build != "all"
  - levels | selectattr('name', 'equalto', "suzen" + item ) | selectattr('servers', 'defined')|list|length>0
